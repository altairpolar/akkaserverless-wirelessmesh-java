syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "akkaserverless/annotations.proto";

package customerlocationview;

import "domain/wirelessmeshdomain.proto";

message CustomerLocationByEmailRequest {
    string email = 1;
}

message CustomerLocationDto {
  string customer_location_id = 1;
  string email = 2;
}

// TODO: This service should subscribe to the CustomerLocationAdded event and update the customer location by email view.
service CustomerLocationByEmailService {
    rpc UpdateCustomerLocation(wirelessmeshdomain.CustomerLocationAdded) returns (CustomerLocationDto) {
        option (akkaserverless.method).eventing = {
          in: {
            value_changes: "customer_location-entity"
          }
        };
        option (akkaserverless.method).view.update = {
          table: "customer-locations"
          transform_updates: true
        };
    }

    rpc GetCustomerLocationByEmail(CustomerLocationByEmailRequest) returns (stream CustomerLocationDto) {
        option (akkaserverless.method).view.query = {
          query: "select * from customer_locations where email = :email"
        };
        option (google.api.http) = {
          get: "/customer-locations"
        };
    }
}
