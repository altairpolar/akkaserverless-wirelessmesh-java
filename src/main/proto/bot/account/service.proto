syntax = "proto3";

package bot.account;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "akkaserverless/annotations.proto";


option java_outer_classname = "BotAccountAPI";

// COMMANDS
message RegisterAccountCommand {
    string id = 1 [(akkaserverless.field).entity_key = true];
    string email = 2;
}

message DeactivateAccountCommand {
    string id = 1 [(akkaserverless.field).entity_key = true];
}

message GetAccountCommand {
    string id = 1 [(akkaserverless.field).entity_key = true];
}

// VALUE TYPES
message GetAccountResponse {
    string id = 1;
    string email = 2;
}



// SERVICE

/**
* The service definition.
* Note: GRPC is the default mechanism, but the google.api.http option gives us http capability for free.
**/
service BotAccountService {
    rpc RegisterAccount(RegisterAccountCommand) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/account/register"
            body: "*"
        };
    }

    rpc GetAccount(GetAccountCommand) returns (GetAccountResponse) {
        option (google.api.http) = {
            get: "/account/get"
        };
    }

    rpc DeactivateAccount(DeactivateAccountCommand) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/account/deactivate"
            body: "*"
        };
    }
}