<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>akkaserverless.wirelessmesh.java</groupId>
  <artifactId>akkaserverless-wirelessmesh-java</artifactId>
  <version>1.0-SNAPSHOT</version>
  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.6.0</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <directory>${project.build.directory}/generated-resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${jdk.target}</source>
          <target>${jdk.target}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <writeDescriptorSet>true</writeDescriptorSet>
          <checkStaleness>true</checkStaleness>
          <protocArtifact>com.google.protobuf:protoc:3.9.1:exe:${os.detected.classifier}</protocArtifact>
          <protocPlugins>
            <protocPlugin>
              <id>akka-grpc</id>
              <groupId>com.lightbend.akka.grpc</groupId>
              <artifactId>akka-grpc-scalapb-protoc-plugin_2.12</artifactId>
              <version>${akka.grpc.version}</version>
              <mainClass>akka.grpc.gen.Main</mainClass>
            </protocPlugin>
          </protocPlugins>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer>
                  <resource>reference.conf</resource>
                </transformer>
                <transformer>
                  <mainClass>${mainClass}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.26.1</version>
        <executions>
          <execution>
            <id>build-docker-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>push-docker-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <images>
            <image>
              <name>${akkasls.dockerImage}:%l</name>
              <build>
                <from>docker.io/library/adoptopenjdk:${jdk.target}-jre-hotspot</from>
                <tags>
                  <tag>${akkasls.dockerTag}</tag>
                </tags>
                <ports>
                  <port>8080</port>
                </ports>
                <assembly>
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <entryPoint>
                  <arg>java</arg>
                  <arg>-jar</arg>
                  <arg>/maven/${project.build.finalName}.jar</arg>
                </entryPoint>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${mainClass}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>com.akkaserverless</groupId>
      <artifactId>akkaserverless-java-sdk-testkit</artifactId>
      <version>0.7.0-beta.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>testcontainers</artifactId>
          <groupId>org.testcontainers</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.lightbend.akka.grpc</groupId>
      <artifactId>akka-grpc-runtime_2.12</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>scalapb-runtime_2.12</artifactId>
          <groupId>com.thesamet.scalapb</groupId>
        </exclusion>
        <exclusion>
          <artifactId>akka-stream_2.12</artifactId>
          <groupId>com.typesafe.akka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>akka-http-core_2.12</artifactId>
          <groupId>com.typesafe.akka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>akka-http_2.12</artifactId>
          <groupId>com.typesafe.akka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>akka-http2-support_2.12</artifactId>
          <groupId>com.typesafe.akka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>akka-discovery_2.12</artifactId>
          <groupId>com.typesafe.akka</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.6.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>byte-buddy</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
        <exclusion>
          <artifactId>byte-buddy-agent</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
        <exclusion>
          <artifactId>objenesis</artifactId>
          <groupId>org.objenesis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-bom_${scala.binary.version}</artifactId>
        <version>2.6.13</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <properties>
    <scala.binary.version>2.12</scala.binary.version>
    <jdk.target>11</jdk.target>
    <mainClass>wirelessmesh.WirelessMeshMain</mainClass>
    <akka.grpc.version>1.1.1</akka.grpc.version>
    <akkasls.dockerTag>${project.version}</akkasls.dockerTag>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <akkasls.dockerImage>${project.artifactId}</akkasls.dockerImage>
  </properties>
</project>

